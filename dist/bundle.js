(()=>{"use strict";class t{constructor(){this.grid=this.create(),this.ships=[],this.gameOver=!1,this.missedShots=[]}add(t){this.ships.push(t);for(const s of t.coords)this.grid[s[0]][s[1]]="O"}receiveAttack(t){if("O"===this.grid[t[0]][t[1]]){this.grid[t[0]][t[1]]="X";for(const s of this.ships)for(const e of s.coords)e.every((function(s,e){return s===t[e]}))&&(s.hit(),this.checkGameOver())}else this.missedShots.push(t)}checkGameOver(){for(const t of this.ships)for(const s of t.coords)"O"===this.grid[s[0]][s[1]]&&(this.gameOver=!1);this.gameOver=!0}create(){const t=[];for(let s=0;s<10;s++){let s=[];for(let t=0;t<10;t++)s.push(".");t.push(s)}return t}isValidMove(t){return"X"!==this.grid[t[0]][t[1]]&&!this.missedShots.includes(t)}renderDOMGrid(t){for(let s=0;s<10;s++)for(let e=0;e<10;e++){const r=document.querySelectorAll(`[data-coord='[${s},${e}]']`);"O"===this.grid[s][e]&&(r.length>1?r[t].parentElement.classList.add("ship-cell"):r.classList.add("ship-cell")),"X"===this.grid[s][e]&&r.classList.add("good-attack"),this.missedShots.includes([s,e])&&r.classList.add("missed-attack")}}}class s{#t={Carrier:5,Battleship:4,Destroyer:3,Submarine:3,"Patrol Boat":2};constructor(t,s,e){this.length=this.#t[t],this.hitCount=0,this.sunkStatus=!1,this.coords=[s],this.direction=e,this.populateCoords()}hit(){this.hitCount+=1,this.hitCount===this.length&&(this.sunkStatus=!0)}isSunk(){return this.sunkStatus}populateCoords(){if(this.length<2)return;const t=[[-1,0],[0,-1],[0,1],[1,0]];let s;s="top"===this.direction?t[0]:"left"===this.direction?t[1]:"right"===this.direction?t[2]:t[3];let e=this.coords[0][0],r=this.coords[0][1];for(let t=0;t<this.length-1;t++){let t=e+s[0],i=r+s[1];this.coords.push([t,i]),e=t,r=i}}}class e{constructor(s,e){this.name=s,this.board=new t,this.index=e,this.current=!1,this.won=!1}generateRandomAttack(){let t=Math.floor(10*Math.random()),s=Math.floor(10*Math.random());for(;!this.board.isValidMove([t,s]);)t=Math.floor(10*Math.random),s=Math.floor(10*Math.random);return[t,s]}move(t,s){this.toggleCurrPlayer(),s.board.receiveAttack(t),s.toggleCurrPlayer()}toggleCurrPlayer(){!1===this.current?this.current=!0:this.current=!1}setShip(t,e,r){const i=new s(t,e,r);this.board.add(i)}}const r=new e(0);r.current=!0;const i=new e(1);r.setShip("Carrier",[9,2],"right"),r.setShip("Battleship",[4,5],"right"),r.setShip("Destroyer",[5,1],"bottom"),r.setShip("Submarine",[2,2],"right"),r.setShip("Patrol Boat",[2,9],"top"),r.board.populateDOMGrid(0),i.setShip("Carrier",[9,2],"right"),i.setShip("Battleship",[4,5],"right"),i.setShip("Destroyer",[5,1],"bottom"),i.setShip("Submarine",[2,2],"right"),i.setShip("Patrol Boat",[2,9],"top"),i.board.populateDOMGrid(1),document.querySelectorAll(".gameboard-cell").forEach((t=>{t.addEventListener("click",(()=>{currentPlayer.move([t.dataset.x,t.dataset.y],opponent)}))}))})();